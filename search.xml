<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>哔哩哔哩笔试</title>
    <url>/2022/09/07/%E7%AC%94%E7%BB%8F/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/</url>
    <content><![CDATA[ <span id="more"></span>
<h3 id="题型：单选15题-75分-编程题2题-25分-，限时1h"><a href="#题型：单选15题-75分-编程题2题-25分-，限时1h" class="headerlink" title="题型：单选15题(75分) + 编程题2题(25分)，限时1h"></a>题型：单选15题(75分) + 编程题2题(25分)，限时1h</h3><h3 id="题目-https-www-nowcoder-com-discuss-1036819"><a href="#题目-https-www-nowcoder-com-discuss-1036819" class="headerlink" title="题目 https://www.nowcoder.com/discuss/1036819"></a>题目 <code>https://www.nowcoder.com/discuss/1036819</code></h3><h3 id="单选题：（这里写几个有比较重要的吧）"><a href="#单选题：（这里写几个有比较重要的吧）" class="headerlink" title="单选题：（这里写几个有比较重要的吧）"></a>单选题：（这里写几个有比较重要的吧）</h3><ol>
<li><p>https是没有加密域名</p>
</li>
<li><p>怎么能准确计算0.1+0.2呢？(0.1 + 0.2) * 100 / 100 不行，因为已经计算过0.1+0.2了，没差别</p>
</li>
<li><p>302临时重定向，301、302两个重定向考察得还挺多的。</p>
</li>
<li><p>跨域时不会触发OPTIONS请求?<code>https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#%E7%AE%80%E5%8D%95%E8%AF%B7%E6%B1%82</code></p>
<ol>
<li>不会触发OPTIONS请求，即要求该请求是简单请求。根据上述规则可以确定，选项中仅Content-Type、Accept可以手动配置，且Content-Type的范围有限制，应为“text/plain、multipart/form-data、application/x-www-form-urlencoded”三者之一。所以正确选项为’Accept: application/json’</li>
</ol>
</li>
<li><p>代码题1-这题考察了<code>异步代码中的错误处理</code>，看看try-catch、await、async那些</p>
</li>
<li><p>代码题4-考察了this指向，为啥最后两个是b、d呢？注意定义箭头函数的时候是在对象方法执行的时候，而不是一开始，一开始没有执行创建箭头函数的代码。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  <span class="variable language_">window</span>.<span class="property">value</span> = <span class="string">&#x27;v&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">value</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callArrowFun</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">fun</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;执行我&#x27;</span>, <span class="variable language_">this</span>.<span class="property">value</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">fun</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">arrowFun</span>(<span class="params"></span>) &#123;</span><br><span class="line">  (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这是啥&#x27;</span>, <span class="variable language_">this</span>.<span class="property">value</span>);</span><br><span class="line">  &#125;)()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj1 = &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">  <span class="attr">fn</span>: fn</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj2 = &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">  <span class="attr">fn</span>: callArrowFun,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj3 = &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">  <span class="attr">fn</span>: arrowFun,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fn</span>();      <span class="comment">// v</span></span><br><span class="line">obj1.<span class="title function_">fn</span>(); <span class="comment">// a</span></span><br><span class="line">obj2.<span class="title function_">fn</span>(); <span class="comment">// b</span></span><br><span class="line">obj3.<span class="title function_">fn</span>(); <span class="comment">// d</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj4 = &#123;</span><br><span class="line">  <span class="attr">value</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">  <span class="attr">fn</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">value</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj4.<span class="title function_">fn</span>()  <span class="comment">// v 这是创建的时候取全局的value</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> value = <span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">  <span class="keyword">let</span> <span class="title function_">fn</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">value</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">fn</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test</span>()</span><br></pre></td></tr></table></figure>
<h3 id="算法题："><a href="#算法题：" class="headerlink" title="算法题："></a>算法题：</h3></li>
<li><p>编辑距离<br>解析：这是力扣第72题编辑距离，考察了动态规划。要多想一想，注意细节</p>
</li>
<li><p>括号有效的变形问题</p>
</li>
</ol>
<ul>
<li>我觉得题目描述有问题，一是没有说明只有一处不符合需要补充，仅仅是从用例看出来的，二是没有说至少如何修改。所以好多人只做出60%来。下面我结合自己的理解，完善题干，并给出解答。</li>
<li>题目描述，大中小括号能成对即为有效，如果发现不能配对，则应补上缺失的括号，返回缺失的括号及其位置，要求补充的括号数最少。参数为括号数组，输出结果为括号及位置。</li>
<li>用例：[“[“, “]”, “(“, “{“, “[“, “}”, “)”];  应输出<code>],5</code>。即在位置5处补上’]’</li>
</ul>
]]></content>
      <categories>
        <category>笔经</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo&amp;Next建站踩坑纪要</title>
    <url>/2022/09/07/%E4%B8%87%E6%81%B6%E4%B9%8B%E6%BA%90%E2%80%94%E2%80%94%E5%BB%BA%E7%AB%99%E5%8F%8A%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[ <span id="more"></span>
<p><img src="https://img1.imgtp.com/2022/09/07/PTKDcUqe.jpg" alt="图片链接"></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>早就有建立个人博客的想法，明明有那么多的博客平台为啥要自己建呢？可能就是无聊想折腾吧。</p>
<p>我最初想的从零开始，自己买个服务器，搭建前后台…… 但这个目标太远大，往往是想一想、加上手头有其他事情就放弃了。目标定得太大会让人望而生畏。现在是招聘季，正好总结一下自己2年来的学习经历，一举两得。</p>
<p>这是用Hexo + Next + Github搭建的个人博客。起初看到这些新名词就有点恐惧，但是程序员怎么能怕折腾呢。首先Github就提供搭建静态页面的功能，只要选择一个仓库，在其中写一些html页面就好了，但是没有维持下去，加之确实不好看，就慢慢失去兴趣了。Hexo就是一个建站的框架，Next是一种模板，我选择他是因为这个模板用的人多，遇到问题也好解决。Next里有很多模板引擎的内容。</p>
<p>Hexo + Next会自动将生成的public文件夹部署到github仓库中，就省去自己把github的仓库拉到本地，再每天push了。而且写博客是用md写的，不用写原生的html。</p>
<p>也算是半自动化地建了一个博客吧。</p>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ul>
<li>站已经建完啦，暂时也不用安装什么包了，日常维护只要以下几个命令就好了</li>
<li>hexo n 文件名   #自动生成博客，且自动添加Front-matter</li>
<li>hexo n page 文件夹名 #自动在source里生成文件夹，供添加侧边栏项目使用的</li>
<li>hexo s   #启动服务预览，即在本地打开搭建完的博客，便于预览调试吧。默认的路径是<code>http://localhost:4000/</code></li>
<li>hexo g  #将博客打包成public文件夹</li>
<li>hexo d  #将打包的public文件夹部署到设置的github仓库中，即上线了。</li>
<li>hexo clean  # 清楚缓存，当发现修改没用的时候，就要执行这个命令了。博客打包、部署之前一定要运行下这个命令</li>
</ul>
<h3 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h3><ul>
<li>首页文章的预览功能<!-- more -->不生效<ul>
<li>在文章的Front-matter中添加description即可</li>
</ul>
</li>
<li>hexo d更新部署后，访问博客没有更新。<ul>
<li>这是缓存的问题，可以多次刷新，或者清除缓存，或者换个浏览器</li>
</ul>
</li>
</ul>
<h3 id="自定义侧边栏项目"><a href="#自定义侧边栏项目" class="headerlink" title="自定义侧边栏项目"></a>自定义侧边栏项目</h3><p>Next自定义了很多的侧边栏选项，如本博客里的“首页、标签、归档”。但是怎么自定义侧边栏呢？以新增的荣誉墙honors为例，步骤如下：</p>
<ol>
<li>hexo new p honors   生成honors文件夹</li>
<li>在主题配置文件夹的menu里添加对应配置<code>honors: /honors || fa fa-thumbs-up</code></li>
<li>在next/languages/zh-CN.yml的menu下添加配置<code>honors: 荣誉墙</code></li>
<li>在honors文件夹中编辑即可</li>
<li>注意：Next的内置小图标是Font Awesome，一般去这里找就够了！</li>
</ol>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>满帮笔试</title>
    <url>/2022/09/07/%E7%AC%94%E7%BB%8F/%E6%BB%A1%E5%B8%AE/</url>
    <content><![CDATA[ <span id="more"></span>
<h3 id="前言-1-5h、单选题30-2分-编程题2-20分"><a href="#前言-1-5h、单选题30-2分-编程题2-20分" class="headerlink" title="前言: 1.5h、单选题30 * 2分 + 编程题2 * 20分"></a>前言: 1.5h、单选题30 * 2分 + 编程题2 * 20分</h3><h3 id="单选题："><a href="#单选题：" class="headerlink" title="单选题："></a>单选题：</h3><p>考了2道Linux、fixed相对于谁定位、flex子元素居中的属性、清除浮动的写法、JS一大堆、delete删除元素的返回值、交换器隔离冲突域、奇校验[哈哈，竟然考到这个了]、callee属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="number">1</span>;</span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">delete</span> a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">delete</span> b);</span><br></pre></td></tr></table></figure>
<h3 id="编程题："><a href="#编程题：" class="headerlink" title="编程题："></a>编程题：</h3><ol>
<li>考察了用递归返回嵌套数据中的目标信息，但是数据给得太少了，就直接手写了<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">function</span> <span class="title function_">find</span>(<span class="params">code</span>) &#123;</span><br><span class="line">  <span class="keyword">switch</span> (code) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;100&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;上海&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;101&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;上海 浦东&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;102&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;上海 浦西&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;200&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;杭州&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;201&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;杭州 西湖&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;221&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;杭州 西湖 黄龙时代&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;202&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;杭州 余杭&quot;</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">find</span>(<span class="string">&quot;221&quot;</span>));</span><br></pre></td></tr></table></figure></li>
<li>农场有一只一岁的羊，它在第二年、第四年就会生一只羊，生下来记为1岁，在第五年死去，问第n年农场有多少只羊。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSheep</span>(<span class="params">year</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> ageCount = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    num = [<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= year; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> res = num[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">let</span> newBorn = ageCount[<span class="number">1</span>] + ageCount[<span class="number">3</span>],</span><br><span class="line">      died = ageCount[<span class="number">4</span>];</span><br><span class="line">    res += newBorn;</span><br><span class="line">    res -= died;</span><br><span class="line">    num[i] = res;</span><br><span class="line">    <span class="comment">// 更新ageCount</span></span><br><span class="line">    <span class="keyword">let</span> temp1 = ageCount[<span class="number">1</span>],</span><br><span class="line">      temp2 = ageCount[<span class="number">2</span>],</span><br><span class="line">      temp3 = ageCount[<span class="number">3</span>];</span><br><span class="line">    ageCount = [<span class="number">0</span>, newBorn, temp1, temp2, temp3];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> num[year];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getSheep</span>(<span class="number">10</span>));</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>笔经</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>完美世界笔试</title>
    <url>/2022/09/08/%E7%AC%94%E7%BB%8F/%E5%AE%8C%E7%BE%8E%E4%B8%96%E7%95%8C%E7%AC%94%E8%AF%95/</url>
    <content><![CDATA[<span id="more"></span>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul>
<li>限时1.5h，单选21 * 3分 + 不限选择题9 * 3分（注意少选得1分哦）+ 问答题*2（20 + 10分）</li>
<li>我发现不管笔试难或易，总会有人吐槽“XXX公司是不是不想招人啊”，简单的就说刷不了人，难的就说都被刷了…… 哈哈哈</li>
<li>哎，光做笔试真没劲！我倒要看看哪家先进面。</li>
<li>【刚刚收到满帮的面试邀请啦，呜呜，太不容易了，我要好好把握一下】</li>
</ul>
<h3 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h3><p>选择题考得很简单，限于HTML、CSS、JS。大部分是css的问题比如box-sizing的值、 有哪些伪元素、flex:auto的属性简写。</p>
<h3 id="问答题"><a href="#问答题" class="headerlink" title="问答题"></a>问答题</h3><p>没有编程，这部分应该算是编程题吧，可以用本地IDE。难道又要人工改卷嘛。</p>
<ol>
<li>写一个方法，求出路口到A到路口B的最短路径</li>
</ol>
<ul>
<li>题干就是这样的。就是求图的最短路径嘛，但是没有输入输出，也不知道该怎么写。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">  求图的最短路径。</span></span><br><span class="line"><span class="comment">  题目啥都不给，怎么写呀？  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 假设已给出图的邻接矩阵，各点A、B、C用数字0、1、2……表示。所以找到0-1的最短路径就可以了</span></span><br><span class="line"><span class="comment">// 测试：</span></span><br><span class="line"><span class="keyword">let</span> arr = [[<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>], [<span class="number">3</span>], [<span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>], [<span class="number">0</span>]];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">minRoad</span>(arr));  <span class="comment">// [0,3,1]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">minRoad</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> start = arr[<span class="number">0</span>], roads = []</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; start.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">    <span class="title function_">dfs</span>(start[i], arr, [<span class="number">0</span>])</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> roads.<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>) =&gt;</span> a.<span class="property">length</span> - b.<span class="property">length</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">dfs</span>(<span class="params">next, arr, road</span>) &#123;</span><br><span class="line">    <span class="comment">// 这种情况下说明有环或者回头路，此路不通</span></span><br><span class="line">    <span class="keyword">if</span>(road.<span class="title function_">includes</span>(next)) &#123;</span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 这个说明找到路了</span></span><br><span class="line">    <span class="keyword">if</span>(next === <span class="number">1</span>) &#123;</span><br><span class="line">      roads.<span class="title function_">push</span>([].<span class="title function_">concat</span>(road, next))</span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果没有找到，就继续往下</span></span><br><span class="line">    <span class="keyword">let</span> nextPoint = arr[next];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nextPoint.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">      <span class="title function_">dfs</span>(nextPoint[i], arr, [].<span class="title function_">concat</span>(road, next));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>写一个功能，实现页面动态展示本年的剩余天数——“XX年还剩XX天XX时XX分XX秒”<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;time&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      思路是用下一年的1.1日减去现在的时间的毫秒数，再格式化日期。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      动态变化是用setInterval来实现的</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    */</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;time&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>()</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> now = date.<span class="title function_">getTime</span>();</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> nextYear = date.<span class="title function_">getFullYear</span>() + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> end = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">`<span class="subst">$&#123;nextYear&#125;</span>-01-01`</span>).<span class="title function_">getTime</span>();</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> last = end - now;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> show = <span class="title function_">getDate</span>(date.<span class="title function_">getFullYear</span>(), last);</span></span><br><span class="line"><span class="language-javascript">        div.<span class="property">innerText</span> = show;</span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 格式化时间</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">getDate</span>(<span class="params">year, time</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> relsecond = <span class="title class_">Math</span>.<span class="title function_">floor</span>((time/<span class="number">1000</span>)%<span class="number">60</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> minute = ((time/<span class="number">1000</span>)/<span class="number">60</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> relminute = <span class="title class_">Math</span>.<span class="title function_">floor</span>(minute%<span class="number">60</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> hour = minute/<span class="number">60</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> relhour = <span class="title class_">Math</span>.<span class="title function_">floor</span>(hour%<span class="number">24</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> relday = <span class="title class_">Math</span>.<span class="title function_">floor</span>(hour/<span class="number">24</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;year&#125;</span>年还剩<span class="subst">$&#123;relday&#125;</span>天<span class="subst">$&#123;relhour&#125;</span>时<span class="subst">$&#123;relminute&#125;</span>分<span class="subst">$&#123;relsecond&#125;</span>秒`</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>笔经</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>wps笔试</title>
    <url>/2022/09/10/%E7%AC%94%E7%BB%8F/wps%E7%AC%94%E8%AF%95/</url>
    <content><![CDATA[<span id="more"></span>
<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><ol>
<li>赛码系统、2h、8简答(40分) + 4算法(60分)</li>
<li>吐槽：那个算法题算是怎么回事？用记事本写，没有用例测试，更不用谈什么通过率了，为啥复制粘贴也不能用(复制粘贴上面写的的内容)，明明有更成熟的笔试方式，为什么偏要用这个呢？然后让员工手动改？……</li>
</ol>
<h3 id="简答题："><a href="#简答题：" class="headerlink" title="简答题："></a>简答题：</h3><p>考察了“css盒模型的定义、CORS、前端的模块化规范、说一说事件捕获和冒泡”，还有四个忘记了，就是一些前端的基础概念。</p>
<h3 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h3><ul>
<li>因为不能用本地的IDE，也没有留下代码。</li>
</ul>
<ol>
<li>将数字每隔3位用’,’隔开，如“123456” —— “123,456”</li>
<li>写一个函数将数组去重，至少写三种写法</li>
<li>给一串数字组成的字符串，以数组形式返回全部正确的组成ip地址的组合方式。</li>
<li>俩字符串，如s1、s2的长度相同，仅仅通过交换s2的字符以实现s1 === s2，求返回最少的交换次数k。如 s1 = ‘abc’，s2 = ‘bca’, 则返回k为2。</li>
</ol>
]]></content>
      <categories>
        <category>笔经</category>
      </categories>
      <tags>
        <tag>导航</tag>
      </tags>
  </entry>
</search>
